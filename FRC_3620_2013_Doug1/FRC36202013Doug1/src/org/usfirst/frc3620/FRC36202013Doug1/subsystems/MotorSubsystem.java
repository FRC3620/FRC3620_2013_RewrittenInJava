// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc3620.FRC36202013Doug1.subsystems;
import org.usfirst.frc3620.FRC36202013Doug1.RobotMap;
import org.usfirst.frc3620.FRC36202013Doug1.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc3620.FRC36202013Doug1.Accelerometer2;
import org.usfirst.frc3620.FRC36202013Doug1.FRC3620Subsystem;
import org.usfirst.frc3620.FRC36202013Doug1.FRC3620SubsystemHelper;
import org.usfirst.frc3620.FRC36202013Doug1.RobotMode;
/**
 *
 */
public class MotorSubsystem extends Subsystem implements FRC3620Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController motorController = RobotMap.motorSubsystemMotorController;
    Accelerometer analogAccelerometer = RobotMap.motorSubsystemAnalogAccelerometer;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    Accelerometer2 accelerometer2 = RobotMap.motorSubsystemAccelerometer2;
    public MotorSubsystem() {
        super();
        rememberToRegisterMe(this);
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void rememberToRegisterMe(FRC3620Subsystem me) {
        FRC3620SubsystemHelper.registerFRC3620SubsystemHelper(me);
    }
    public void onRobotModeTransition(RobotMode robotMode) {
    }
    public void periodic(RobotMode mode) {
        SmartDashboard.putNumber("MotorSubsystem.motor", motorController.get());
        
        double ax = accelerometer2.getAccel(Accelerometer2.AXIS_X);
        double ay = accelerometer2.getAccel(Accelerometer2.AXIS_Y);
        double az = accelerometer2.getAccel(Accelerometer2.AXIS_Z);
        
        double a2 = Math.sqrt(ax*ax + ay*ay + az*az);
        SmartDashboard.putNumber("MotorSubsystem.ax", ax);
        SmartDashboard.putNumber("MotorSubsystem.ay", ay);
        SmartDashboard.putNumber("MotorSubsystem.az", az);
        SmartDashboard.putNumber("MotorSubsystem.a2", a2);
        //System.out.println (a2);
    }
    
    // Put methods for controlling this subsystem here. Call these from Commands.
}
